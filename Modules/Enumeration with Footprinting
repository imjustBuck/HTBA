#### Cheat Sheet 

Infrastructure-based Enumeration
Command	                                                                  Description
curl -s https://crt.sh/\?q\=<target-domain>\&output\=json | jq .	        Certificate transparency.
for i in $(cat ip-addresses.txt);do shodan host $i;done	                  Scan each IP address in a list using Shodan.

Host-based Enumeration
FTP
Command	                                                                  Description
ftp <FQDN/IP>	                                                            Interact with the FTP service on the target.
nc -nv <FQDN/IP> 21	                                                      Interact with the FTP service on the target.
telnet <FQDN/IP> 21	                                                      Interact with the FTP service on the target.
openssl s_client -connect <FQDN/IP>:21 -starttls ftp	                    Interact with the FTP service on the target using encrypted connection.
wget -m --no-passive ftp://anonymous:anonymous@<target>	                  Download all available files on the target FTP server.

SMB
Command	                                                                  Description
smbclient -N -L //<FQDN/IP>	                                              Null session authentication on SMB.
smbclient //<FQDN/IP>/<share>	                                            Connect to a specific SMB share.
rpcclient -U "" <FQDN/IP>	                                                Interaction with the target using RPC.
samrdump.py <FQDN/IP>	                                                    Username enumeration using Impacket scripts.
smbmap -H <FQDN/IP>	                                                      Enumerating SMB shares.
crackmapexec smb <FQDN/IP> --shares -u '' -p ''	                          Enumerating SMB shares using null session authentication.
enum4linux-ng.py <FQDN/IP> -A	                                            SMB enumeration using enum4linux.

NFS
Command	                                                                  Description
showmount -e <FQDN/IP>	                                                  Show available NFS shares.
mount -t nfs <FQDN/IP>:/<share> ./target-NFS/ -o nolock	                  Mount the specific NFS share to ./target-NFS
umount ./target-NFS	                                                      Unmount the specific NFS share.

DNS
Command	                                                                                                        Description
dig ns <domain.tld> @<nameserver>	                                                                              NS request to the specific nameserver.
dig any <domain.tld> @<nameserver>	                                                                            ANY request to the specific nameserver.
dig axfr <domain.tld> @<nameserver>	                                                                            AXFR request to the specific nameserver.
dnsenum --dnsserver <nameserver> --enum -p 0 -s 0 -o found_subdomains.txt -f ~/subdomains.list <domain.tld>	    Subdomain brute forcing.

SMTP
Command	                                                                  Description
telnet <FQDN/IP> 25	

IMAP/POP3
Command                                                                	Description
curl -k 'imaps://<FQDN/IP>' --user <user>:<password>	                  Log in to the IMAPS service using cURL.
openssl s_client -connect <FQDN/IP>:imaps	                              Connect to the IMAPS service.
openssl s_client -connect <FQDN/IP>:pop3s	                              Connect to the POP3s service.

SNMP
Command	                                                                Description
snmpwalk -v2c -c <community string> <FQDN/IP>	                          Querying OIDs using snmpwalk.
onesixtyone -c community-strings.list <FQDN/IP>	                        Bruteforcing community strings of the SNMP service.
braa <community string>@<FQDN/IP>:.1.*	                                Bruteforcing SNMP service OIDs.


MySQL
Command	                                                                Description
mysql -u <user> -p<password> -h <FQDN/IP>	                              Login to the MySQL server.


MSSQL
Command	                                                                Description
mssqlclient.py <user>@<FQDN/IP> -windows-auth	                          Log in to the MSSQL server using Windows authentication.

IPMI
Command	                                                                Description
msf6 auxiliary(scanner/ipmi/ipmi_version)	                              IPMI version detection.
msf6 auxiliary(scanner/ipmi/ipmi_dumphashes)	                          Dump IPMI hashes.


Linux Remote Management
Command	                                                              Description
ssh-audit.py <FQDN/IP>	                                              Remote security audit against the target SSH service.
ssh <user>@<FQDN/IP>	                                                Log in to the SSH server using the SSH client.
ssh -i private.key <user>@<FQDN/IP>	                                  Log in to the SSH server using private key.
ssh <user>@<FQDN/IP> -o PreferredAuthentications=password	            Enforce password-based authentication.


Windows Remote Management
Command	                                                              Description
rdp-sec-check.pl <FQDN/IP>	                                          Check the security settings of the RDP service.
xfreerdp /u:<user> /p:"<password>" /v:<FQDN/IP>	                      Log in to the RDP server from Linux.
evil-winrm -i <FQDN/IP> -u <user> -p <password>                      	Log in to the WinRM server.
wmiexec.py <user>:"<password>"@<FQDN/IP> "<system command>"	          Execute command using the WMI service.


Oracle TNS
Command	                                                                                                              Description
./odat.py all -s <FQDN/IP>	                                                                                          Perform a variety of scans to gather information about the Oracle database services and its components.
sqlplus <user>/<pass>@<FQDN/IP>/<db>                                                                                  Log in to the Oracle database.
./odat.py utlfile -s <FQDN/IP> -d <db> -U <user> -P <pass> --sysdba --putFile C:\\insert\\path file.txt ./file.txt	  Upload a file with Oracle RDBM

######## Enumeration Principles 

OSINT is an independent procedure and should be performed separately from enumeration because OSINT is based exclusively on passive information gathering and does not involve active enumeration of the given target.

Enumeration is a loop in which we repeatedly gather information based on what data we have or have already discovered.

Once we have identified targets in our client's infrastructure, we need to examine the individual services and protocols. 
In most cases, these are services that enable communication between customers, the infrastructure, the administration, and the employees.

!*!*!*!**!*! Our goal is not to get at the systems but to find all the ways to get there. !*!*!*!*!*!*!*

We wouldnt start hunting for treasure by just picking a shovel up and digging in a random spot, we would prepare for it. Gather materials, read maps, pack gear, learn the terrain. map it out and carefully plan out the "hunt" 

Things to think about beyond the actual information provided or gathered: 

What can we see?
What reasons can we have for seeing it?
What image does what we see create for us?
What do we gain from it?
How can we use it?
What can we not see?
What reasons can there be that we do not see?
What image results for us from what we do not see?

An important aspect that must not be confused here is that there are always exceptions to the rules. The principles, however, do not change. 
Another advantage of these principles is that we can see from the practical tasks that we do not lack penetration testing abilities but technical understanding when we suddenly do not know how to proceed because our core task is not to exploit the machines but to find how they can be exploited.

Principles: 

No.	Principle
1.	There is more than meets the eye. Consider all points of view.
2.	Distinguish between what we see and what we do not see.
3.	There are always ways to gain more information. Understand the target.


######### Enumeration Methodology 


Layer	                              Description	                                                                                               Information Categories
1. Internet Presence	              Identification of internet presence and externally accessible infrastructure.	                             Domains, Subdomains, vHosts, ASN, Netblocks, IP Addresses, Cloud Instances, Security Measures
2. Gateway	                        Identify the possible security measures to protect the company's external and internal infrastructure.	   Firewalls, DMZ, IPS/IDS, EDR, Proxies, NAC, Network Segmentation, VPN, Cloudflare
3. Accessible Services	            Identify accessible interfaces and services that are hosted externally or internally.	                     Service Type, Functionality, Configuration, Port, Version, Interface
4. Processes	                      Identify the internal processes, sources, and destinations associated with the services.	                 PID, Processed Data, Tasks, Source, Destination
5. Privileges	                      Identification of the internal permissions and privileges to the accessible services.	                     Groups, Users, Permissions, Restrictions, Environment
6. OS Setup	                        Identification of the internal components and systems setup.	                                             OS Type, Patch Level, Network config, OS Environment, Configuration files, sensitive private files


Important note: The human aspect and the information that can be obtained by employees using OSINT have been removed from the "Internet Presence" layer for simplicity.


Layer No.1: Internet Presence
The first layer we have to pass is the "Internet Presence" layer, where we focus on finding the targets we can investigate. If the scope in the contract allows us to look for additional hosts, this layer is even more critical than for fixed targets only. 
In this layer, we use different techniques to find domains, subdomains, netblocks, and many other components and information that present the presence of the company and its infrastructure on the Internet.

**********The goal of this layer is to identify all possible target systems and interfaces that can be tested.**********

Layer No.2: Gateway
Here we try to understand the interface of the reachable target, how it is protected, and where it is located in the network. Due to the diversity, different functionalities, and some particular procedures, we will go into more detail about this layer in other modules.

*******************The goal is to understand what we are dealing with and what we have to watch out for.

Layer No.3: Accessible Services
In the case of accessible services, we examine each destination for all the services it offers. Each of these services has a specific purpose that has been installed for a particular reason by the administrator. 
Each service has certain functions, which therefore also lead to specific results. To work effectively with them, we need to know how they work. Otherwise, we need to learn to understand them.

************This layer aims to understand the reason and functionality of the target system and gain the necessary knowledge to communicate with it and exploit it for our purposes effectively.

This is the part of enumeration we will mainly deal with in this module.

Layer No.4: Processes
Every time a command or function is executed, data is processed, whether entered by the user or generated by the system. This starts a process that has to perform specific tasks, and such tasks have at least one source and one target.

********************The goal here is to understand these factors and identify the dependencies between them.

Layer No.5: Privileges
Each service runs through a specific user in a particular group with permissions and privileges defined by the administrator or the system. These privileges often provide us with functions that administrators overlook. This often happens in Active Directory infrastructures and many other case-specific administration environments and servers where users are responsible for multiple administration areas.

****************It is crucial to identify these and understand what is and is not possible with these privileges.

Layer No.6: OS Setup
Here we collect information about the actual operating system and its setup using internal access. This gives us a good overview of the internal security of the systems and reflects the skills and capabilities of the company's administrative teams.

*************The goal here is to see how the administrators manage the systems and what sensitive internal information we can glean from them.


### DOMAIN INFORMATION 

This type of information is gathered passively without direct and active scans. 
In other words, we remain hidden and navigate as "customers" or "visitors" to avoid direct connections to the company that could expose us. 

when passively gathering information, we can use third-party services to understand the company better. 
However, the first thing we should do is scrutinize the company's main website. Then, we should read through the texts, keeping in mind what technologies and structures are needed for these services..

Things beyond jsut hte main site we can research:

Certificates 
DNS records 

Cert Syntax: 

MJBUCKNER@htb[/htb]$ curl -s https://crt.sh/\?q\=<URL>\&output\=json | jq .


Sorting Syntax: 

MJBUCKNER@htb[/htb]$ curl -s https://crt.sh/\?q\=inlanefreight.com\&output\=json | jq . | grep name | cut -d":" -f2 | grep -v "CN=" | cut -d'"' -f2 | awk '{gsub(/\\n/,"\n");}1;' | sort -u


Once we see which hosts can be investigated further, we can generate a list of IP addresses with a minor adjustment to the cut command and run them through Shodan.

Shodan can be used to find devices and systems permanently connected to the Internet like Internet of Things (IoT). 
It searches the Internet for open TCP/IP ports and filters the systems according to specific terms and criteria. 
For example, open HTTP or HTTPS ports and other server ports for FTP, SSH, SNMP, Telnet, RTSP, or SIP are searched. 
As a result, we can find devices and systems, such as surveillance cameras, servers, smart home systems, industrial controllers, traffic lights and traffic controllers, and various network components.


SHODAN IP SYNTAX

Syntax: MJBUCKNER@htb[/htb]$ for i in $(cat subdomainlist);do host $i | grep "has address" | grep inlanefreight.com | cut -d" " -f4 >> ip-addresses.txt;done
        MJBUCKNER@htb[/htb]$ for i in $(cat ip-addresses.txt);do shodan host $i;done



### DNS RECORDS 

Syntax - MJBUCKNER@htb[/htb]$ dig any url.com -> we can change out any for literally "any" of the DNS record types -> MX / A / AAAA / CAA 


####### HOST BASED ENUMERATION ########## 

### FTP 

File transfer protocol is one of hte oldest protocols and its jsut that. a protocol to transfer files.  it runs on the application layer of TCP/IP stack. so same layer as HTTP or P0P

## TFTP 
Trivial File Transfer Protocol (TFTP) is simpler than FTP and performs file transfers between client and server processes. However, it does not provide user authentication and other valuable features supported by FTP. 
In addition, while FTP uses TCP, TFTP uses UDP, making it an unreliable protocol and causing it to use UDP-assisted application layer recovery.

Commands	                        Description
connect	                                Sets the remote host, and optionally the port, for file transfers.
get	                                Transfers a file or set of files from the remote host to the local host.
put	                                Transfers a file or set of files from the local host onto the remote host.
quit	                                Exits tftp.
status	                                Shows the current status of tftp, including the current transfer mode (ascii or binary), connection status, time-out value, and so on.
verbose	                                Turns verbose mode, which displays additional information during file transfer, on or off.

Unlike the FTP client, TFTP does not have directory listing functionality.

i will mostly be focusing on FTP for now since ive maybe used VsFTP once or twice over three years.. if more is needed on that topic i will modify these notes. 

## Dangerous Settings        

Setting	                                        Description
anonymous_enable=YES	                        Allowing anonymous login?
anon_upload_enable=YES	                        Allowing anonymous to upload files?
anon_mkdir_write_enable=YES	                Allowing anonymous to create new directories?
no_anon_password=YES	                        Do not ask anonymous for password?
anon_root=/home/username/ftp	                Directory for anonymous.
write_enable=YES	                        Allow the usage of FTP commands: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE, and SITE?


Anonymous Login
  FTP


Syntax: MJBUCKNER@htb[/htb]$ ftp 10.129.14.136

Connected to 10.129.14.136.
220 "Welcome to the HTB Academy vsFTP service."
Name (10.129.14.136:cry0l1t3): anonymous

230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.


ftp> ls

200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-rw-r--    1 1002     1002      8138592 Sep 14 16:54 Calender.pptx
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Clients
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Documents
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Employees
-rw-rw-r--    1 1002     1002           41 Sep 14 16:45 Important Notes.txt
226 Directory send OK.


Downloading files from such an FTP server is one of the main features, as well as uploading files created by us. 
This allows us, for example, to use LFI vulnerabilities to make the host execute system commands. Apart from the files, we can view, download and inspect.
Attacks are also possible with the FTP logs, leading to Remote Command Execution (RCE). 
This applies to the FTP services and all those we can detect during our enumeration phase.

Download a File

FTP

Syntax: ftp> ls

200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rwxrwxrwx    1 ftp      ftp             0 Sep 16 17:24 Calendar.pptx
drwxrwxrwx    4 ftp      ftp          4096 Sep 16 17:57 Clients
drwxrwxrwx    2 ftp      ftp          4096 Sep 16 18:05 Documents
drwxrwxrwx    2 ftp      ftp          4096 Sep 16 17:24 Employees
-rwxrwxrwx    1 ftp      ftp            41 Sep 18 15:58 Important Notes.txt
226 Directory send OK.


Syntax: ftp> get Important\ Notes.txt

local: Important Notes.txt remote: Important Notes.txt
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for Important Notes.txt (41 bytes).
226 Transfer complete.
41 bytes received in 0.00 secs (606.6525 kB/s)


ftp> exit

221 Goodbye.
  FTP

Syntax ( on our host machine now ) MJBUCKNER@htb[/htb]$ ls | grep Notes.txt

'Important Notes.txt'


## Download All Available Files
 
FTP

Syntax: MJBUCKNER@htb[/htb]$ wget -m --no-passive ftp://anonymous:anonymous@10.129.14.136

--2021-09-19 14:45:58--  ftp://anonymous:*password*@10.129.14.136/                                         
           => ‘10.129.14.136/.listing’                                                                     
Connecting to 10.129.14.136:21... connected.                                                               
Logging in as anonymous ... Logged in!
==> SYST ... done.    ==> PWD ... done.
==> TYPE I ... done.  ==> CWD not needed.
==> PORT ... done.    ==> LIST ... done.                                                                 
12.12.1.136/.listing           [ <=>                                  ]     466  --.-KB/s    in 0s       
                                                                                                         
2021-09-19 14:45:58 (65,8 MB/s) - ‘10.129.14.136/.listing’ saved [466]                                     
--2021-09-19 14:45:58--  ftp://anonymous:*password*@10.129.14.136/Calendar.pptx   
           => ‘10.129.14.136/Calendar.pptx’                                       
==> CWD not required.                                                           
==> SIZE Calendar.pptx ... done.                                                                                                                            
==> PORT ... done.    ==> RETR Calendar.pptx ... done.       

...SNIP...

2021-09-19 14:45:58 (48,3 MB/s) - ‘10.129.14.136/Employees/.listing’ saved [119]

FINISHED --2021-09-19 14:45:58--
Total wall clock time: 0,03s
Downloaded: 15 files, 1,7K in 0,001s (3,02 MB/s)

## Once we have downloaded all the files, wget will create a directory with the name of the IP address of our target. All downloaded files are stored there, which we can then inspect locally.

Syntax ( we may have to install the tree app but its easy ) MJBUCKNER@htb[/htb]$ tree .

.
└── 10.129.14.136
    ├── Calendar.pptx
    ├── Clients
    │   └── Inlanefreight
    │       ├── appointments.xlsx
    │       ├── contract.docx
    │       ├── meetings.txt
    │       └── proposal.pptx
    ├── Documents
    │   ├── appointments-template.xlsx
    │   ├── contract-template.docx
    │   └── contract-template.pdf
    ├── Employees
    └── Important Notes.txt

5 directories, 9 files

## Upload a File
  FTP
Syntax: MJBUCKNER@htb[/htb]$ touch testupload.txt
With the PUT command, we can upload files in the current folder to the FTP server.

  FTP
ftp> put testupload.txt 

local: testupload.txt remote: testupload.txt
---> PORT 10,10,14,4,184,33
200 PORT command successful. Consider using PASV.
---> STOR testupload.txt
150 Ok to send data.
226 Transfer complete.


ftp> ls

---> TYPE A
200 Switching to ASCII mode.
---> PORT 10,10,14,4,223,101
200 PORT command successful. Consider using PASV.
---> LIST
150 Here comes the directory listing.
-rw-rw-r--    1 1002     1002      8138592 Sep 14 16:54 Calender.pptx
drwxrwxr-x    2 1002     1002         4096 Sep 14 17:03 Clients
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Documents
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Employees
-rw-rw-r--    1 1002     1002           41 Sep 14 16:45 Important Notes.txt
-rw-------    1 1002     133             0 Sep 15 14:57 testupload.txt
226 Directory send OK.

### Footprinting FTP 

going back to nmap commands we learned last module: 

Nmap
 
FTP

Syntax: MJBUCKNER@htb[/htb]$ sudo nmap -sV -p21 -sC -A 10.129.14.136

Starting Nmap 7.80 ( https://nmap.org ) at 2021-09-16 18:12 CEST
Nmap scan report for 10.129.14.136
Host is up (0.00013s latency).

PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 2.0.8 or later
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| -rwxrwxrwx    1 ftp      ftp       8138592 Sep 16 17:24 Calendar.pptx [NSE: writeable]
| drwxrwxrwx    4 ftp      ftp          4096 Sep 16 17:57 Clients [NSE: writeable]
| drwxrwxrwx    2 ftp      ftp          4096 Sep 16 18:05 Documents [NSE: writeable]
| drwxrwxrwx    2 ftp      ftp          4096 Sep 16 17:24 Employees [NSE: writeable]
| -rwxrwxrwx    1 ftp      ftp            41 Sep 16 17:24 Important Notes.txt [NSE: writeable]
|_-rwxrwxrwx    1 ftp      ftp             0 Sep 15 14:57 testupload.txt [NSE: writeable]
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to 10.10.14.4
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 2
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status


The default script scan is based on the services' fingerprints, responses, and standard ports. 
Once Nmap has detected the service, it executes the marked scripts one after the other, providing different information. 
For example, the ftp-anon NSE script checks whether the FTP server allows anonymous access. 
If so, the contents of the FTP root directory are rendered for the anonymous user.

The ftp-syst, for example, executes the STAT command, which displays information about the FTP server status. 
This includes configurations as well as the version of the FTP server.
Nmap also provides the ability to trace the progress of NSE scripts at the network level if we use the --script-trace option in our scans. 
This lets us see what commands Nmap sends, what ports are used, and what responses we receive from the scanned server.


Nmap Script Trace
  FTP
Syntax: MJBUCKNER@htb[/htb]$ sudo nmap -sV -p21 -sC -A 10.129.14.136 --script-trace

Starting Nmap 7.80 ( https://nmap.org ) at 2021-09-19 13:54 CEST                                                                                                                                                   
NSOCK INFO [11.4640s] nsock_trace_handler_callback(): Callback: CONNECT SUCCESS for EID 8 [10.129.14.136:21]                                   
NSOCK INFO [11.4640s] nsock_trace_handler_callback(): Callback: CONNECT SUCCESS for EID 16 [10.129.14.136:21]             
NSOCK INFO [11.4640s] nsock_trace_handler_callback(): Callback: CONNECT SUCCESS for EID 24 [10.129.14.136:21]
NSOCK INFO [11.4640s] nsock_trace_handler_callback(): Callback: CONNECT SUCCESS for EID 32 [10.129.14.136:21]
NSOCK INFO [11.4640s] nsock_read(): Read request from IOD #1 [10.129.14.136:21] (timeout: 7000ms) EID 42
NSOCK INFO [11.4640s] nsock_read(): Read request from IOD #2 [10.129.14.136:21] (timeout: 9000ms) EID 50
NSOCK INFO [11.4640s] nsock_read(): Read request from IOD #3 [10.129.14.136:21] (timeout: 7000ms) EID 58
NSOCK INFO [11.4640s] nsock_read(): Read request from IOD #4 [10.129.14.136:21] (timeout: 11000ms) EID 66
NSE: TCP 10.10.14.4:54226 > 10.129.14.136:21 | CONNECT
NSE: TCP 10.10.14.4:54228 > 10.129.14.136:21 | CONNECT
NSE: TCP 10.10.14.4:54230 > 10.129.14.136:21 | CONNECT
NSE: TCP 10.10.14.4:54232 > 10.129.14.136:21 | CONNECT
NSOCK INFO [11.4660s] nsock_trace_handler_callback(): Callback: READ SUCCESS for EID 50 [10.129.14.136:21] (41 bytes): 220 Welcome to HTB-Academy FTP service...
NSOCK INFO [11.4660s] nsock_trace_handler_callback(): Callback: READ SUCCESS for EID 58 [10.129.14.136:21] (41 bytes): 220 Welcome to HTB-Academy FTP service...
NSE: TCP 10.10.14.4:54228 < 10.129.14.136:21 | 220 Welcome to HTB-Academy FTP service.


The scan history shows that four different parallel scans are running against the service, with various timeouts. 
For the NSE scripts, we see that our local machine uses other output ports (54226, 54228, 54230, 54232) and first initiates the connection with the CONNECT command.
From the first response from the server, we can see that we are receiving the banner from the server to our second NSE script (54228) from the target FTP server. 
If necessary, we can, of course, use other applications such as netcat or telnet to interact with the FTP server.

Service Interaction
  FTP
Syntax: MJBUCKNER@htb[/htb]$ nc -nv 10.129.14.136 21
  FTP
Syntax: MJBUCKNER@htb[/htb]$ telnet 10.129.14.136 21

It looks slightly different if the FTP server runs with TLS/SSL encryption. Because then we need a client that can handle TLS/SSL. For this, we can use the client openssl and communicate with the FTP server. 
The good thing about using openssl is that we can see the SSL certificate, which can also be helpful.


#### FTP CHALLENGE 

Question 1 - Which version of the FTP server is running on the target system? Submit the entire banner as the answer. - for this ill do my go to nmap scan and we can just do - nmap -p21 -sCV -A <ip> - InFreight FTP v1.1

!!! logging into the ftp server after running the nmap scan above allowed me to knwo anonymous login was allowed and it told me the version as soon as i typed in ' ftp 10.129.203.220 ' and then i did use the get command to get flag.txt and get the answer 

Question 2 - Enumerate the FTP server and find the flag.txt file. Submit the contents of it as the answer. -> before trying im assuming im going to connect to ftp via anonymous then use the get command on flag.txt and then read it off host machine -> HTB{b7skjr4c76zhsds7fzhd4k3ujg7nhdjre}


## SMB FOOTPRINTING!!! 

After my first time through i know SMB comes up a lot in the AD portion of the learning path. 

SMB is a client-server protocol that regulates access to files and entire directories and other network resources such as printers, routers, or interfaces released for the network. 

In IP networks, SMB uses TCP protocol for this purpose, which provides for a three-way handshake between client and server before a connection is finally established. 
The specifications of the TCP protocol also govern the subsequent transport of data. ## so connections / authentications play a big role im what wwe can get out of SMB Sahres 

An SMB server can provide arbitrary parts of its local file system as shares. 
Therefore the hierarchy visible to a client is partially independent of the structure on the server. 
Access rights are defined by Access Control Lists (ACL). They can be controlled in a fine-grained manner based on attributes such as execute, read, and full access for individual users or user groups. 
The ACLs are defined based on the shares and therefore do not correspond to the rights assigned locally on the server.


We see global settings and two shares that are intended for printers. 
The global settings are the configuration of the available SMB server that is used for all shares. 
In the individual shares, however, the global settings can be overwritten, which can be configured with high probability even incorrectly. 
Let us look at some of the settings to understand how the shares are configured in Samba.

Setting	                                                Description
[sharename]	                                        The name of the network share.
workgroup = WORKGROUP/DOMAIN	                        Workgroup that will appear when clients query.
path = /path/here/	                                The directory to which user is to be given access.
server string = STRING	                                The string that will show up when a connection is initiated.
unix password sync = yes	                        Synchronize the UNIX password with the SMB password?
usershare allow guests = yes	                        Allow non-authenticated users to access defined share?
map to guest = bad user	                                What to do when a user login request doesn't match a valid UNIX user?
browseable = yes	                                Should this share be shown in the list of available shares?
guest ok = yes	                                        Allow connecting to the service without using a password?
read only = yes	                                        Allow users to read files only?
create mask = 0700	                                What permissions need to be set for newly created files?

Dangerous Settings
Some of the above settings already bring some sensitive options. 
However, suppose we question the settings listed below and ask ourselves what the employees could gain from them, as well as attackers. 
In that case, we will see what advantages and disadvantages the settings bring with them. Let us take the setting browseable = yes as an example. 
If we as administrators adopt this setting, the company's employees will have the comfort of being able to look at the individual folders with the contents. 
Many folders are eventually used for better organization and structure. 
If the employee can browse through the shares, the attacker will also be able to do so after successful access.

Setting	                                                        Description
browseable = yes	                                        Allow listing available shares in the current share?
read only = no	                                                Forbid the creation and modification of files?
writable = yes	                                                Allow users to create and modify files?
guest ok = yes	                                                Allow connecting to the service without using a password?
enable privileges = yes	                                        Honor privileges assigned to specific SID?
create mask = 0777	                                        What permissions must be assigned to the newly created files?
directory mask = 0777	                                        What permissions must be assigned to the newly created directories?
logon script = script.sh	                                What script needs to be executed on the user's login?
magic script = script.sh	                                Which script should be executed when the script gets closed?
magic output = script.out	                                Where the output of the magic script needs to be stored?


## Connecting to SMB 

SMBclient - Connecting to the Share
  SMB


Syntax: MJBUCKNER@htb[/htb]$ smbclient -N -L //10.129.14.128

        Sharename       Type      Comment
        ---------       ----      -------
        print$          Disk      Printer Drivers
        home            Disk      INFREIGHT Samba
        dev             Disk      DEVenv
        notes           Disk      CheckIT
        IPC$            IPC       IPC Service (DEVSM)
SMB1 disabled -- no workgroup available
We can see that we now have five different shares on the Samba server from the result. Thereby print$ and an IPC$ are already included by default in the basic setting, as we have already seen. Since we deal with the [notes] share, let us log in and inspect it using the same client program. If we are not familiar with the client program, we can use the help command on successful login, listing all the possible commands we can execute.

  SMB
Syntax: MJBUCKNER@htb[/htb]$ smbclient //10.129.14.128/notes

Enter WORKGROUP\<username>'s password: 
Anonymous login successful
Try "help" to get a list of possible commands.


Syntax: smb: \> help

?              allinfo        altname        archive        backup         
blocksize      cancel         case_sensitive cd             chmod          
chown          close          del            deltree        dir            
du             echo           exit           get            getfacl        
geteas         hardlink       help           history        iosize         
lcd            link           lock           lowercase      ls             
l              mask           md             mget           mkdir          
more           mput           newer          notify         open           
posix          posix_encrypt  posix_open     posix_mkdir    posix_rmdir    
posix_unlink   posix_whoami   print          prompt         put            
pwd            q              queue          quit           readlink       
rd             recurse        reget          rename         reput          
rm             rmdir          showacls       setea          setmode        
scopy          stat           symlink        tar            tarmode        
timeout        translate      unlock         volume         vuid           
wdel           logon          listconnect    showconnect    tcon           
tdis           tid            utimes         logoff         ..             
!            


Syntax: smb: \> ls

  .                                   D        0  Wed Sep 22 18:17:51 2021
  ..                                  D        0  Wed Sep 22 12:03:59 2021
  prep-prod.txt                       N       71  Sun Sep 19 15:45:21 2021

                30313412 blocks of size 1024. 16480084 blocks available

.
Once we have discovered interesting files or folders, we can download them using the get command. Smbclient also allows us to execute local system commands using an exclamation mark at the beginning (!<cmd>) without interrupting the connection.

Download Files from SMB
  SMB
Syntax:  smb: \> get prep-prod.txt 

getting file \prep-prod.txt of size 71 as prep-prod.txt (8,7 KiloBytes/sec) 
(average 8,7 KiloBytes/sec)


smb: \> !ls

prep-prod.txt


Syntax: smb: \> !cat prep-prod.txt

[] check your code with the templates
[] run code-assessment.py
[] …	


### FOOTPRINTING SMB 

again were going back to some nmap commands we learned earlier: 


Syntax: MJBUCKNER@htb[/htb]$ sudo nmap 10.129.14.128 -sVC -p139,445

Starting Nmap 7.80 ( https://nmap.org ) at 2021-09-19 15:15 CEST
Nmap scan report for sharing.inlanefreight.htb (10.129.14.128)
Host is up (0.00024s latency).

PORT    STATE SERVICE     VERSION
139/tcp open  netbios-ssn Samba smbd 4.6.2
445/tcp open  netbios-ssn Samba smbd 4.6.2
MAC Address: 00:00:00:00:00:00 (VMware)

Host script results:
|_nbstat: NetBIOS name: HTB, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2021-09-19T13:16:04
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 11.35 seconds

This didnt tell us much so other tools we can use are rpcclient and SMBmap and Crackmapexec ANDD Enum4Linux-ng

RPCclient

SMB

Syntax:  MJBUCKNER@htb[/htb]$ rpcclient -U "" 10.129.14.128

Enter WORKGROUP\'s password:
rpcclient $> 
The rpcclient offers us many different requests with which we can execute specific functions on the SMB server to get information. A complete list of all these functions can be found on the man page of the rpcclient.

Query	Description
srvinfo	Server information.
enumdomains	Enumerate all domains that are deployed in the network.
querydominfo	Provides domain, server, and user information of deployed domains.
netshareenumall	Enumerates all available shares.
netsharegetinfo <share>	Provides information about a specific share.
enumdomusers	Enumerates all domain users.
queryuser <RID>	Provides information about a specific user.



RPCclient - Enumeration

SMB

Syntax: rpcclient $> srvinfo

        DEVSMB         Wk Sv PrQ Unx NT SNT DEVSM
        platform_id     :       500
        os version      :       6.1
        server type     :       0x809a03
		
		
rpcclient $> enumdomains

name:[DEVSMB] idx:[0x0]
name:[Builtin] idx:[0x1]


rpcclient $> querydominfo

Domain:         DEVOPS
Server:         DEVSMB
Comment:        DEVSM
Total Users:    2
Total Groups:   0
Total Aliases:  0
Sequence No:    1632361158
Force Logoff:   -1
Domain Server State:    0x1
Server Role:    ROLE_DOMAIN_PDC
Unknown 3:      0x1


rpcclient $> netshareenumall

netname: print$
        remark: Printer Drivers
        path:   C:\var\lib\samba\printers
        password:
netname: home
        remark: INFREIGHT Samba
        path:   C:\home\
        password:
netname: dev
        remark: DEVenv
        path:   C:\home\sambauser\dev\
        password:
netname: notes
        remark: CheckIT
        path:   C:\mnt\notes\
        password:
netname: IPC$
        remark: IPC Service (DEVSM)
        path:   C:\tmp
        password:
		
		
rpcclient $> netsharegetinfo notes

netname: notes
        remark: CheckIT
        path:   C:\mnt\notes\
        password:
        type:   0x0
        perms:  0
        max_uses:       -1
        num_uses:       1
revision: 1
type: 0x8004: SEC_DESC_DACL_PRESENT SEC_DESC_SELF_RELATIVE 
DACL
        ACL     Num ACEs:       1       revision:       2
        ---
        ACE
                type: ACCESS ALLOWED (0) flags: 0x00 
                Specific bits: 0x1ff
                Permissions: 0x101f01ff: Generic all access SYNCHRONIZE_ACCESS WRITE_OWNER_ACCESS WRITE_DAC_ACCESS READ_CONTROL_ACCESS DELETE_ACCESS 
                SID: S-1-1-0


SMBmap 

SMBmap

SMB

Syntax: MJBUCKNER@htb[/htb]$ smbmap -H 10.129.14.128

[+] Finding open SMB ports....
[+] User SMB session established on 10.129.14.128...
[+] IP: 10.129.14.128:445       Name: 10.129.14.128                                     
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        print$                                                  NO ACCESS       Printer Drivers
        home                                                    NO ACCESS       INFREIGHT Samba
        dev                                                     NO ACCESS       DEVenv
        notes                                                   NO ACCESS       CheckIT
        IPC$                                                    NO ACCESS       IPC Service (DEVSM)

CrackMapExec
 
SMB

Syntax: MJBUCKNER@htb[/htb]$ crackmapexec smb 10.129.14.128 --shares -u '' -p ''

SMB         10.129.14.128   445    DEVSMB           [*] Windows 6.1 Build 0 (name:DEVSMB) (domain:) (signing:False) (SMBv1:False)
SMB         10.129.14.128   445    DEVSMB           [+] \: 
SMB         10.129.14.128   445    DEVSMB           [+] Enumerated shares
SMB         10.129.14.128   445    DEVSMB           Share           Permissions     Remark
SMB         10.129.14.128   445    DEVSMB           -----           -----------     ------
SMB         10.129.14.128   445    DEVSMB           print$                          Printer Drivers
SMB         10.129.14.128   445    DEVSMB           home                            INFREIGHT Samba
SMB         10.129.14.128   445    DEVSMB           dev                             DEVenv
SMB         10.129.14.128   445    DEVSMB           notes           READ,WRITE      CheckIT
SMB         10.129.14.128   445    DEVSMB           IPC$                            IPC Service (DEVSM)


Enum4Linux-ng - Installation

SMB
Syntax: MJBUCKNER@htb[/htb]$ git clone https://github.com/cddmp/enum4linux-ng.git
Syntax: MJBUCKNER@htb[/htb]$ cd enum4linux-ng
Syntax: MJBUCKNER@htb[/htb]$ pip3 install -r requirements.txt

Enum4Linux-ng - Enumeration

SMB

Syntax: MJBUCKNER@htb[/htb]$ ./enum4linux-ng.py 10.129.14.128 -A

ENUM4LINUX - next generation

 ==========================
|    Target Information    |
 ==========================
[*] Target ........... 10.129.14.128
[*] Username ......... ''
[*] Random Username .. 'juzgtcsu'
[*] Password ......... ''
[*] Timeout .......... 5 second(s)

 =====================================
|    Service Scan on 10.129.14.128    |
 =====================================
[*] Checking LDAP
[-] Could not connect to LDAP on 389/tcp: connection refused
[*] Checking LDAPS
[-] Could not connect to LDAPS on 636/tcp: connection refused
[*] Checking SMB
[+] SMB is accessible on 445/tcp
[*] Checking SMB over NetBIOS
[+] SMB over NetBIOS is accessible on 139/tcp

 =====================================================
|    NetBIOS Names and Workgroup for 10.129.14.128    |
 =====================================================
[+] Got domain/workgroup name: DEVOPS
[+] Full NetBIOS names information:
- DEVSMB          <00> -         H <ACTIVE>  Workstation Service
- DEVSMB          <03> -         H <ACTIVE>  Messenger Service
- DEVSMB          <20> -         H <ACTIVE>  File Server Service
- ..__MSBROWSE__. <01> - <GROUP> H <ACTIVE>  Master Browser
- DEVOPS          <00> - <GROUP> H <ACTIVE>  Domain/Workgroup Name
- DEVOPS          <1d> -         H <ACTIVE>  Master Browser
- DEVOPS          <1e> - <GROUP> H <ACTIVE>  Browser Service Elections
- MAC Address = 00-00-00-00-00-00

 ==========================================
|    SMB Dialect Check on 10.129.14.128    |
 ==========================================
[*] Trying on 445/tcp
[+] Supported dialects and settings:
SMB 1.0: false
SMB 2.02: true
SMB 2.1: true
SMB 3.0: true
SMB1 only: false
Preferred dialect: SMB 3.0
SMB signing required: false

 ==========================================
|    RPC Session Check on 10.129.14.128    |
 ==========================================
[*] Check for null session
[+] Server allows session using username '', password ''
[*] Check for random user session
[+] Server allows session using username 'juzgtcsu', password ''
[H] Rerunning enumeration with user 'juzgtcsu' might give more results

 ====================================================
|    Domain Information via RPC for 10.129.14.128    |
 ====================================================
[+] Domain: DEVOPS
[+] SID: NULL SID
[+] Host is part of a workgroup (not a domain)

 ============================================================
|    Domain Information via SMB session for 10.129.14.128    |
 ============================================================
[*] Enumerating via unauthenticated SMB session on 445/tcp
[+] Found domain information via SMB
NetBIOS computer name: DEVSMB
NetBIOS domain name: ''
DNS domain: ''
FQDN: htb

 ================================================
|    OS Information via RPC for 10.129.14.128    |
 ================================================
[*] Enumerating via unauthenticated SMB session on 445/tcp
[+] Found OS information via SMB
[*] Enumerating via 'srvinfo'
[+] Found OS information via 'srvinfo'
[+] After merging OS information we have the following result:
OS: Windows 7, Windows Server 2008 R2
OS version: '6.1'
OS release: ''
OS build: '0'
Native OS: not supported
Native LAN manager: not supported
Platform id: '500'
Server type: '0x809a03'
Server type string: Wk Sv PrQ Unx NT SNT DEVSM

 ======================================
|    Users via RPC on 10.129.14.128    |
 ======================================
[*] Enumerating users via 'querydispinfo'
[+] Found 2 users via 'querydispinfo'
[*] Enumerating users via 'enumdomusers'
[+] Found 2 users via 'enumdomusers'
[+] After merging user results we have 2 users total:
'1000':
  username: mrb3n
  name: ''
  acb: '0x00000010'
  description: ''
'1001':
  username: cry0l1t3
  name: cry0l1t3
  acb: '0x00000014'
  description: ''

 =======================================
|    Groups via RPC on 10.129.14.128    |
 =======================================
[*] Enumerating local groups
[+] Found 0 group(s) via 'enumalsgroups domain'
[*] Enumerating builtin groups
[+] Found 0 group(s) via 'enumalsgroups builtin'
[*] Enumerating domain groups
[+] Found 0 group(s) via 'enumdomgroups'

 =======================================
|    Shares via RPC on 10.129.14.128    |
 =======================================
[*] Enumerating shares
[+] Found 5 share(s):
IPC$:
  comment: IPC Service (DEVSM)
  type: IPC
dev:
  comment: DEVenv
  type: Disk
home:
  comment: INFREIGHT Samba
  type: Disk
notes:
  comment: CheckIT
  type: Disk
print$:
  comment: Printer Drivers
  type: Disk
[*] Testing share IPC$
[-] Could not check share: STATUS_OBJECT_NAME_NOT_FOUND
[*] Testing share dev
[-] Share doesn't exist
[*] Testing share home
[+] Mapping: OK, Listing: OK
[*] Testing share notes
[+] Mapping: OK, Listing: OK
[*] Testing share print$
[+] Mapping: DENIED, Listing: N/A

 ==========================================
|    Policies via RPC for 10.129.14.128    |
 ==========================================
[*] Trying port 445/tcp
[+] Found policy:
domain_password_information:
  pw_history_length: None
  min_pw_length: 5
  min_pw_age: none
  max_pw_age: 49710 days 6 hours 21 minutes
  pw_properties:
  - DOMAIN_PASSWORD_COMPLEX: false
  - DOMAIN_PASSWORD_NO_ANON_CHANGE: false
  - DOMAIN_PASSWORD_NO_CLEAR_CHANGE: false
  - DOMAIN_PASSWORD_LOCKOUT_ADMINS: false
  - DOMAIN_PASSWORD_PASSWORD_STORE_CLEARTEXT: false
  - DOMAIN_PASSWORD_REFUSE_PASSWORD_CHANGE: false
domain_lockout_information:
  lockout_observation_window: 30 minutes
  lockout_duration: 30 minutes
  lockout_threshold: None
domain_logoff_information:
  force_logoff_time: 49710 days 6 hours 21 minutes

 ==========================================
|    Printers via RPC for 10.129.14.128    |
 ==========================================
[+] No printers returned (this is not an error)

Completed after 0.61 seconds

Try to use two tools for enumeration incase the programming of the tools tell us two different things. 



## SMB Challenge 

Question 1 - What version of the SMB server is running on the target system? Submit the entire banner as the answer.

Question 2 - What is the name of the accessible share on the target?

Question 3 -  Connect to the discovered share and find the flag.txt file. Submit the contents as the answer.

Question 4 - Find out which domain the server belongs to.

Question 5 - Find additional information about the specific share we found previously and submit the customized version of that specific share as the answer. 

Question 6 - What is the full system path of that specific share? (format: "/directory/names")


