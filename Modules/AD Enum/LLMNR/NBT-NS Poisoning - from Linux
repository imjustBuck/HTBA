In this phase, we will work through two different techniques side-by-side: network poisoning and password spraying. We will perform these actions with the goal of acquiring valid cleartext credentials for a domain user account, thereby granting us a foothold in the domain to begin the next phase of enumeration from a credentialed standpoint.


This section and the next will cover a common way to gather credentials and gain an initial foothold during an assessment: a Man-in-the-Middle attack on Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) broadcasts.

Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification that can be used when DNS fails. If a machine attempts to resolve a host but DNS resolution fails, typically, the machine will try to ask all other machines on the local network for the correct host address via LLMNR. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. It uses port 5355 over UDP natively. If LLMNR fails, the NBT-NS will be used. NBT-NS identifies systems on a local network by their NetBIOS name. NBT-NS utilizes port 137 over UDP.

The kicker here is that when LLMNR/NBT-NS are used for name resolution, ANY host on the network can reply. This is where we come in with Responder to poison these requests

EXAMPLE: 

Quick Example - LLMNR/NBT-NS Poisoning
Let's walk through a quick example of the attack flow at a very high level:

1. A host attempts to connect to the print server at \\print01.inlanefreight.local, but accidentally types in \\printer01.inlanefreight.local.
2. The DNS server responds, stating that this host is unknown.
3. The host then broadcasts out to the entire local network asking if anyone knows the location of \\printer01.inlanefreight.local.
4. The attacker (us with Responder running) responds to the host stating that it is the \\printer01.inlanefreight.local that the host is looking for.
5. The host believes this reply and sends an authentication request to the attacker with a username and NTLMv2 password hash.
6. This hash can then be cracked offline or used in an SMB Relay attack if the right conditions exist.


so basically once we are connected to the network... we run ifconfig / ipconfig and figure out the network were actually on. then run responder and capture hashes then crack them with hashcat 

Syntax: MJBUCKNER@htb[/htb]$ hashcat -m 5600 forend_ntlmv2 /usr/share/wordlists/rockyou.txt  


Challenge - SSH to 10.129.140.146 with user "htb-student" and password "HTB_@cademy_stdnt!"

Question 1 - Run Responder and obtain a hash for a user account that starts with the letter b. Submit the account name as your answer. - backupagent
1) ssh htb-student@10.129.140.146 
2) ifconfig -a - in SSH'd session -> find ens224 listed
3) sudo responder -I ens224 -> IN SSH SESSION!!! 
4) i just copied all names and hashes we recieved from responder -> ab_adm + clusteragent + backupagent + svc_qualys + forend

Question 2 - Crack the hash for the previous account and submit the cleartext password as your answer. - h1backup55
1) from the hashes i copied from last question -> save as hashes.txt
2) hashcat -m 5600 hashes.txt /usr/share/wordlists/rockyou.txt 
3) cracked 4 hashes - SVC_QUALYS:security#1 & BACKUPAGENT:h1backup55 & FOREND:Klmcargo2 & WLEY:transporter@4




Question 3 - Run Responder and obtain an NTLMv2 hash for the user wley. Crack the hash using Hashcat and submit the user's password as your answer. - transporter@4
1) steps above






