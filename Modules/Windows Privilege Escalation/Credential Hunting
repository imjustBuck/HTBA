
Credentials can unlock many doors for us during our assessments. We may find credentials during our privilege escalation enumeration that can lead directly to local admin access, grant us a foothold into the Active Directory domain environment, or even be used to escalate privileges within the domain. There are many places that we may find credentials on a system, some more obvious than others.

Application Configuration Files
Searching for Files
Against best practices, applications often store passwords in cleartext config files. Suppose we gain command execution in the context of an unprivileged user account. In that case, we may be able to find credentials for their admin account or another privileged local or domain account. We can use the findstr utility to search for this sensitive information.

PS SYNTAX: PS C:\htb> findstr /SIM /C:"password" *.txt *.ini *.cfg *.config *.xml

Dictionary Files
Chrome Dictionary Files
Another interesting case is dictionary files. For example, sensitive information such as passwords may be entered in an email client or a browser-based application, which underlines any words it doesn't recognize. The user may add these words to their dictionary to avoid the distracting red underline.

PS SYNTAX: PS C:\htb> gc 'C:\Users\htb-student\AppData\Local\Google\Chrome\User Data\Default\Custom Dictionary.txt' | Select-String password

Password1234!

Unattended Installation Files
Unattended installation files may define auto-logon settings or additional accounts to be created as part of the installation. Passwords in the unattend.xml are stored in plaintext or base64 encoded.

PowerShell History File
Command to
Starting with Powershell 5.0 in Windows 10, PowerShell stores command history to the file:

PATH: C:\Users\<username>\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt.

Confirming PowerShell History Save Path
As seen in the (handy) Windows Commands PDF, published by Microsoft here, there are many commands which can pass credentials on the command line. We can see in the example below that the user-specified local administrative credentials to query the Application Event Log using wevutil.


PS SYNTAX: PS C:\htb> (Get-PSReadLineOption).HistorySavePath
PS SYNTAX: C:\Users\htb-student\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt

READING FILE: 

PS SYNTAX: PS C:\htb> gc (Get-PSReadLineOption).HistorySavePath

dir
cd Temp
md backups
cp c:\inetpub\wwwroot\* .\backups\
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://www.powershellgallery.com/packages/MrAToolbox/1.0.1/Content/Get-IISSite.ps1'))
. .\Get-IISsite.ps1
Get-IISsite -Server WEB02 -web "Default Web Site"

ONE LINER FOR CURRENT USER HISTORY 

PS SYNTAX: PS C:\htb> foreach($user in ((ls C:\users).fullname)){cat "$user\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt" -ErrorAction SilentlyContinue} 

Decrypting PowerShell Credentials
If we have gained command execution in the context of this user or can abuse DPAPI, then we can recover the cleartext credentials from encrypted.xml. The example below assumes the former.

PS SYNTAX: PS C:\htb> $credential = Import-Clixml -Path 'C:\scripts\pass.xml'
PS SYNTAX: PS C:\htb> $credential.GetNetworkCredential().username

bob
PS SYNTAX: PS C:\htb> $credential.GetNetworkCredential().password

Str0ng3ncryptedP@ss!

CHALLENGE: RDP to 10.129.43.44 (ACADEMY-WINLPE-WS01) with user "htb-student" and password "HTB_@cademy_stdnt!"


Question 1 -  Search the file system for a file containing a password. Submit the password as your answer. - HINT: Start at C:\Users and look for configuration files - Pr0xyadm1nPassw0rd! 
1) dog this is stupid. anyway xfreerdp in 
2) take the fint and i just went to file explorer -> c:\users -> serached .xml in the search bar and found -> settings.xml
3) output :<username>proxyadmin</username>

<password>Pr0xyadm1nPassw0rd!</password>

Question 2 -  RDP to 10.129.43.44 (ACADEMY-WINLPE-WS01) with user "bob" and password "Str0ng3ncryptedP@ss!"
Question 2 - Connect as the bob user and practice decrypting the credentials in the pass.xml file. Submit the contents of the flag.txt on the desktop once you are done.
1) also stupid... just follow last few steps and get the flag. 

